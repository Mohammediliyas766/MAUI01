trigger:
- main

variables:
  buildConfiguration: 'Release'
  outputPath: '$(System.DefaultWorkingDirectory)/output'

pool:
  vmImage: 'windows-latest' # Use a Windows agent for .NET MAUI builds

stages:
- stage: Build
  displayName: Build Stage
  jobs:
  - job: Build_Job
    displayName: Build .NET MAUI Application
    steps:
    # Install .NET 9.x SDK
    - task: UseDotNet@2
      displayName: Install .NET 9.x SDK
      inputs:
        version: '9.x'
        includePreviewVersions: true

    # Install Required Workloads
    - script: |
        dotnet workload install maui maui-android
      displayName: Install .NET MAUI Workloads

    # Clear NuGet Cache (Optional)
    - script: |
        dotnet nuget locals all --clear
      displayName: Clear NuGet Cache

    # Restore NuGet Packages with Feed Configuration
    - script: |
        dotnet restore $(System.DefaultWorkingDirectory)/MauiApp1.sln --source "https://pkgs.dev.azure.com/mohil/mohil/_packaging/{FeedName}/nuget/v3/index.json"
      displayName: Restore NuGet Packages

    # Build and Publish the MAUI Project for Android
    - script: |
        dotnet publish -f:net9.0-android -c $(buildConfiguration) -o $(outputPath)
      displayName: Build and Publish Android MAUI App

    # Publish Build Artifacts
    - task: PublishBuildArtifacts@1
      displayName: Publish Build Artifacts
      inputs:
        PathtoPublish: '$(outputPath)'
        ArtifactName: 'maui-app'
        publishLocation: 'Container'
